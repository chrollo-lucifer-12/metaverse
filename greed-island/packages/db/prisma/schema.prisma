// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  Admin
  User
}

model User {
  id       String  @id @unique @default(uuid())
  username String  @unique
  clerkId  String  @unique
  email    String  @unique
  imageUrl String?
  avatarId String
  role     ROLE
  spaces   Space[]
  Avatar   Avatar  @relation(fields: [avatarId], references: [id])
}

model Space {
  id            String          @id @unique @default(uuid())
  name          String
  width         Int
  height        Int
  thumbnail     String?
  creator       User            @relation(fields: [creatorId], references: [id])
  creatorId     String
  spaceElements spaceElements[]
  mapId         String
  map           Map             @relation(fields: [mapId], references: [id])
}

model spaceElements {
  id        String   @id @unique @default(uuid())
  elementId String
  spaceId   String
  x         Int
  y         Int
  Space     Space    @relation(fields: [spaceId], references: [id])
  Elements  Elements @relation(fields: [elementId], references: [id])
}

model Elements {
  id          String          @id @unique @default(uuid())
  width       Int
  height      Int
  imageUrl    String
  static      Boolean
  spaces      spaceElements[]
  mapElements mapElements[]
}

model Map {
  id          String        @id @unique @default(cuid())
  width       Int
  height      Int
  name        String
  thumbnail   String
  mapElements mapElements[]
  Space       Space[]
}

model mapElements {
  id        String   @id @unique @default(cuid())
  mapId     String
  x         Int?
  y         Int?
  Elements  Elements @relation(fields: [elementId], references: [id])
  elementId String
  Map       Map      @relation(fields: [mapId], references: [id])
}

model Avatar {
  id          String @id @unique @default(cuid())
  imageUrl    String
  imageUrl2   String
  name        String
  users       User[]
  idleJson    Json
  runningJson Json
}
